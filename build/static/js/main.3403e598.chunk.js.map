{"version":3,"sources":["dictionaries/key.dictionary.js","components/key/Key.js","functions/simulate-hover.js","constants/keys.const.js","functions/sound.js","functions/handle-key.js","components/keyboard/Keyboard.js","App.js","serviceWorker.js","index.js"],"names":["KeyMap","Map","note","sound","fn","Key","actionKey","sharp","hasSharp","handleClick","useEffect","document","addEventListener","event","key","toUpperCase","id","className","getElementById","classList","add","simulateHoverEnter","has","get","remove","simulateHoverLeave","onClick","defaultProps","Keys","interval","isSharp","ctx","window","AudioContext","webkitAudioContext","beep","duration","type","finishedCallback","osc","createOscillator","connect","destination","noteOn","start","setTimeout","noteOff","stop","handleKey","Keyboard","removeEventListener","map","i","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","URL","process","href","origin","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3403e598.chunk.js","sourcesContent":["const KeyMap = new Map([\r\n  [\"A\", () => ({ note: \"C0\",  sound: (fn) => fn(200, 4, null) }) ],\r\n  [\"W\", () => ({ note: \"C#0\", sound: (fn) => fn(200, 4, null) }) ],\r\n  [\"S\", () => ({ note: \"D0\",  sound: (fn) => fn(200, 4, null) }) ],\r\n  [\"E\", () => ({ note: \"D#0\", sound: (fn) => fn(200, 4, null) }) ],\r\n  [\"D\", () => ({ note: \"E0\",  sound: (fn) => fn(200, 4, null) }) ],\r\n  [\"H\", () => ({ note: \"F0\",  sound: (fn) => fn(200, 4, null) }) ],\r\n  [\"U\", () => ({ note: \"F#0\", sound: (fn) => fn(200, 4, null) }) ],\r\n  [\"J\", () => ({ note: \"G0\",  sound: (fn) => fn(200, 4, null) }) ],\r\n  [\"I\", () => ({ note: \"G#0\", sound: (fn) => fn(200, 4, null) }) ],\r\n  [\"K\", () => ({ note: \"A0\",  sound: (fn) => fn(200, 4, null) }) ],\r\n  [\"L\", () => ({ note: \"B0\",  sound: (fn) => fn(200, 4, null) }) ],\r\n  [\"O\", () => ({ note: \"A#0\", sound: (fn) => fn(200, 4, null) }) ],\r\n])\r\n\r\nexport default KeyMap\r\n","import React, { useEffect } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport KeyMap from '../../dictionaries/key.dictionary.js'\r\n\r\nimport { \r\n  simulateHoverEnter,\r\n  simulateHoverLeave\r\n} from '../../functions/simulate-hover'\r\n\r\nimport \"./Key.css\"\r\n\r\n\r\nconst Key = ({ note, actionKey, sharp, hasSharp, handleClick }) => {\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", event => {\r\n      const key = event.key.toUpperCase()\r\n\r\n      if (actionKey === key) {\r\n\r\n        const { note } = KeyMap.has(key) && KeyMap.get(key)()\r\n        const className = sharp ? 'enterHoverBlack' : 'enterHoverWhite'\r\n\r\n        simulateHoverEnter(note, className)\r\n      }\r\n    })\r\n    \r\n    document.addEventListener(\"keyup\", event => {\r\n      const key = event.key.toUpperCase()\r\n\r\n      if (actionKey === key) {\r\n\r\n        const { note } = KeyMap.has(key) && KeyMap.get(key)()\r\n        const className = sharp ? 'enterHoverBlack' : 'enterHoverWhite'\r\n\r\n        simulateHoverLeave(note, className)\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      {\r\n        !sharp && (\r\n          <div\r\n            id={note}\r\n            onClick={() => handleClick(actionKey)}\r\n            className={`white-key ${hasSharp ? '' : 'hasNoSharp'}`}\r\n          >\r\n            <div className=\"majorNoteName\">\r\n              {note}\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n      {\r\n        sharp && (\r\n          <div\r\n            id={note}\r\n            onClick={() => handleClick(actionKey)}\r\n            className=\"black-key\"\r\n          >\r\n            <div className=\"sharpNoteName\" >\r\n              {note}\r\n            </div>\r\n          </div>\r\n        )}\r\n    </>\r\n  )\r\n}\r\n\r\nKey.propTypes = {\r\n  note: PropTypes.string,\r\n  hasSharp: PropTypes.bool\r\n}\r\n\r\nKey.defaultProps = {\r\n  hasSharp: false\r\n}\r\n\r\nexport default Key\r\n","const simulateHoverEnter = (id, className) => document.getElementById(id).classList.add(className)\r\n\r\nconst simulateHoverLeave = (id, className) => document.getElementById(id).classList.remove(className)\r\n\r\nexport {\r\n  simulateHoverLeave,\r\n  simulateHoverEnter\r\n}\r\n","const Keys = [\r\n  { note: \"C0\",  actionKey: 'A', interval: 0,  isSharp: false, hasSharp: true  },\r\n  { note: \"C#0\", actionKey: 'W', interval: 0,  isSharp: true , hasSharp: true  },\r\n  { note: \"D0\",  actionKey: 'S', interval: 0,  isSharp: false, hasSharp: true  },\r\n  { note: \"D#0\", actionKey: 'E', interval: 0,  isSharp: true , hasSharp: true  },\r\n  { note: \"E0\",  actionKey: 'D', interval: 0,  isSharp: false, hasSharp: false },\r\n  { note: \"F0\",  actionKey: 'H', interval: 0,  isSharp: false, hasSharp: true  },\r\n  { note: \"F#0\", actionKey: 'U', interval: 0,  isSharp: true , hasSharp: true  },\r\n  { note: \"G0\",  actionKey: 'J', interval: 0,  isSharp: false, hasSharp: true  },\r\n  { note: \"G#0\", actionKey: 'I', interval: 0,  isSharp: true , hasSharp: true  },\r\n  { note: \"A0\",  actionKey: 'K', interval: 0,  isSharp: false, hasSharp: true  },\r\n  { note: \"A#0\", actionKey: 'O', interval: 0,  isSharp: true , hasSharp: true  },\r\n  { note: \"B0\",  actionKey: 'L', interval: 0,  isSharp: false, hasSharp: false },\r\n];\r\n\r\nexport default Keys\r\n","const ctxClass = window.AudioContext || window.webkitAudioContext;\r\nconst ctx = new ctxClass();\r\n\r\nconst beep = (duration, type, finishedCallback) => {\r\n  duration = +duration;\r\n\r\n  // Only 0-4 are valid types.\r\n  type = type % 5 || 0;\r\n\r\n  if (typeof finishedCallback != \"function\") {\r\n    finishedCallback = function() {};\r\n  }\r\n\r\n  var osc = ctx.createOscillator();\r\n\r\n  osc.type = type;\r\n  //osc.type = \"sine\";\r\n\r\n  osc.connect(ctx.destination);\r\n  if (osc.noteOn) osc.noteOn(0); // old browsers\r\n  if (osc.start) osc.start(); // new browsers\r\n\r\n  setTimeout(function() {\r\n    if (osc.noteOff) osc.noteOff(0); // old browsers\r\n    if (osc.stop) osc.stop(); // new browsers\r\n    finishedCallback();\r\n  }, duration);\r\n};\r\n\r\nexport { beep };\r\n","import KeyMap from '../dictionaries/key.dictionary.js'\r\n\r\nimport { beep } from './sound.js'\r\n\r\nconst handleKey = key => KeyMap.has(key) && KeyMap.get(key)().sound(beep)\r\n\r\nexport default handleKey;\r\n","import React, { useEffect } from \"react\"\r\n\r\nimport Key from \"../key/Key\"\r\nimport Keys from \"../../constants/keys.const\"\r\nimport handleKey from \"../../functions/handle-key\"\r\n\r\nimport \"./Keyboard.css\"\r\n\r\nconst Keyboard = () => {\r\n  const handleClick = note => handleKey(note)\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", event => handleKey(event.key.toUpperCase()))\r\n\r\n    return () => document.removeEventListener(\"keydown\", event => handleKey(event.key.toUpperCase()))\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"keyboard\">\r\n      {\r\n        Keys.map(\r\n          (key, i) => (\r\n            <Key\r\n              key={i}\r\n              note={key.note}\r\n              sharp={key.isSharp}\r\n              hasSharp={key.hasSharp}\r\n              interval={key.interval}\r\n              actionKey={key.actionKey}\r\n              handleClick={handleClick}\r\n            />\r\n          )\r\n        )\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Keyboard\r\n","import React from \"react\";\r\n\r\nimport Keyboard from './components/keyboard/Keyboard'\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <span>Bem vindo ao React Piano Keyboard</span>\r\n      <br />\r\n      <Keyboard />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}